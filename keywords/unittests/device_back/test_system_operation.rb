#
# This file is generated by att util tool.
# by 2011-12-09 10:10:41
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "utf-8"

class TestSystemOperation < Test::Unit::TestCase
  def setup
    @system_operation = DeviceBack::SystemOperation.new
  end
=begin
  def test_wait_until_wan_ip_free
    assert_success do
      @system_operation.wait_until_wan_ip_free({:devicename => $common["device_name"], :ip => "1.1.1.1"})
    end
  end
  
  #这个需要设备上有文件支持
  def test_exec_command_no_times
    assert_success do 
      @system_operation.exec_command({:devicename=>$common["device_name"],:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"sangfor test byte_jump", :block => "是"})
    end
  end 

  #这个需要设备上有文件支持
  def test_exec_command_have_times
    assert_success do 
      @system_operation.exec_command({:devicename=>$common["device_name"],:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"sangfor test byte_jump",:occurtimes=>"4",:block => "是"})
    end
  end   
=end  
  def test_exec_command_with_dilimiter
    assert_success do 
    puts("这里是 test_exec_command_with_dilimiter 进入我的逻辑 ... ===================@@Woolen Test@@====================")
      @system_operation.exec_command({:devicename=>"szyAF",:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"dilimiter=[block]&key=name2&sangfor_woolen",:block => "是"})
    end
    assert_fail do 
    puts("这里是 test_exec_command_with_dilimiter 不进入我的逻辑 没key ... ===================@@Woolen Test@@====================")
      @system_operation.exec_command({:devicename=>"szyAF",:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"dilimiter=[block]&keyname2&sangfor_woolen",:block => "是"})
    end
    assert_fail do 
    puts("这里是 test_exec_command_with_dilimiter 不进入我的逻辑 没checkpoint ... ===================@@Woolen Test@@====================")
      @system_operation.exec_command({:devicename=>"szyAF",:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"dilimiter=[block]&key=name2",:block => "是"})
    end
    assert_fail do 
    puts("这里是 test_exec_command_with_dilimiter 不进入我的逻辑 没dilimiter写错 ... ===================@@Woolen Test@@====================")
      @system_operation.exec_command({:devicename=>"szyAF",:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"dilimi1ter=[block]&key=name2&sangfor_woolen",:block => "是"})
    end
    assert_success do 
    puts("这里是 test_exec_command_with_dilimiter 进了我的逻辑,次数为2 ... ===================@@Woolen Test@@====================")
      @system_operation.exec_command({:devicename=>"szyAF",:sshcommand=>"cat /root/lxytmp.txt",:checkpoint=>"dilimiter=[block]&key=name2&sangfor_woolen",:occurtimes=>"2", :block => "是"})
    end
  end
  
end