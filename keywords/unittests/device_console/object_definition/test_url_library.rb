# coding: utf-8
#
# This file is generated by att util tool.
# by 2012-12-27 15:19:11
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestUrlLibrary < Test::Unit::TestCase
  def setup
    @common = Common.new
    @url_group = DeviceConsole::ObjectDefinition::UrlLibrary.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end
  
  def test_add_delete_url_library
    #全部删除
    assert_success do
      @url_group.delete_url_library({ :delete_type => "全部删除"})
    end
    #新增URL类型,默认值
    assert_success do
      @url_group.add_url_library({ :group_name => "test1"})
    end
    #新增URL类型,指定单个URL值
    assert_success do
      @url_group.add_url_library({ :group_name => "test2",:description => "test2",:url => "www.baidu.com",:keyword => "BAIDU"})
    end
    #新增URL类型,指定多个URL值
    assert_success do
      @url_group.add_url_library({ :group_name => "test3",:description => "test3",:url => "www.baidu.com&www.sina.com",:keyword => "BAIDU&SINA"})
    end
    #新增URL类型,错误格式URL
    assert_fail do
      @url_group.add_url_library({ :group_name => "test4",:description => "test3",:url => "www,baidu.com&www.sina.com",:keyword => "BAIDU&SINA"})
    end
    #部分删除
    assert_success do
      @url_group.delete_url_library({ :delete_type => "部分删除", :group_names => "test1&test3"})
    end
    #全部删除
    assert_success do
      @url_group.delete_url_library({ :delete_type => "全部删除"})
    end
  end
  
end