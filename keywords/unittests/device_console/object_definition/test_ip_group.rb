# coding: utf8
#
# This file is generated by att util tool.
# by 2011-12-07 19:33:21
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestIpGroup < Test::Unit::TestCase
  def setup
    @common = Common.new
    @ip_group = DeviceConsole::ObjectDefinition::IpGroup.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end

  def test_add_ip_group
    # 删除所有的IP组
    assert_success do
      @ip_group.delete_ip_group({ :delete_type => "全部删除", :group_names => ""})
    end
    # 新增IP组,正常
    assert_success do
      @ip_group.add_ip_group({:group_name => "ipgrp1", :description => "描述", :ip_addresses => "2.2.2.2&1.1.1.1-1.1.1.100&3.3.3.3"})
    end
    # 删除IP组
    assert_success do
      @ip_group.delete_ip_group({ :delete_type => "部分删除", :group_names => "ipgrp1"})
    end
    # 新增IP组,异常
    assert_fail do
      @ip_group.add_ip_group({:group_name => "ipgrp2", :description => "描述", :ip_addresses => "2.2.2.10/24"})
    end
    # 新增IP组,正常
    assert_success do
      @ip_group.add_ip_group({:group_name => "ipgrp3", :description => "描述", :ip_addresses => "2.2.2.2 & 1.1.1.1-1.1.1.100& 3.3.3.3 "})
    end
    # 删除所有的IP组
    assert_success do
      @ip_group.delete_ip_group({ :delete_type => "全部删除", :group_names => ""})
    end
  end

  def test_add_dns_ip_group
    assert_hope("解析域名失败") do
      @ip_group.add_dns_ip_group({:group_name => "ipgrp4", :description => "描述", :retry => "2", :domain_name => "wwww.baibaib.comcn"})
    end
  end
end