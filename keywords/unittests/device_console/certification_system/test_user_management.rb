#
# This file is generated by att util tool.
# by 2011-12-07 17:55:36
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestUserManagement < Test::Unit::TestCase
  def setup
    #you can use $device_console_certification_system_user_management to quote hash as argument.
    @common = Common.new
    @usermanage = DeviceConsole::CertificationSystem::UserManagement.new
    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end

  #添加用户组
  def test_add_user_group
    #路径 /100 新增用户4和5
    assert_hope("路径错误") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/100"})
    end
    #路径 / 新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/"})
    end
    #路径 /4新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/4"})
    end

    #路径 /4/4新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/4/4"})
    end
    #路径 /4/4/4新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/4/4/4"})
    end
    #路径 /默认组新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/默认组"})
    end
    #路径 /默认组/4新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/默认组/4"})
    end
    #路径 /默认组/4/4新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/默认组/4/4"})
    end
    #路径 /默认组/4/4/4新增用户4和5
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "4&5",:description=>"",:path=>"/默认组/4/4/4"})
    end
  end
 
  #删除用户组
  def test_delete_user_group

    #删除路径/100 下的用户组4&5
    assert_hope("路径错误") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/100"})
    end
    #删除路径/ 下的用户组50&60
    assert_hope("用户组不存在") do
      @usermanage.delete_user_group({:group_names => "50&60",:path=>"/"})
    end
    #删除路径/默认组/4/4/4下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/默认组/4/4/4"})
    end
    #删除路径/默认组/4/4下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/默认组/4/4"})
    end
    #删除路径/默认组/4下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/默认组/4"})
    end
    #删除路径/默认组下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/默认组"})
    end
    #删除路径/4/4/4下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/4/4/4"})
    end
    #删除路径/4/4下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/4/4"})
    end
    #删除路径/4下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/4"})
    end
    #删除路径/下的用户组4&5
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "4&5",:path=>"/"})
    end
  end
  #新增单个用户
  def test_add_single_user

    #路径 / 新增用户组group1和group2
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "group1&group2",:description=>"",:path=>"/"})
    end
    #路径 /group1 新增用户组group1和group2
    assert_hope("成功") do
      @usermanage.add_user_group({:group_names => "group1&group2",:description=>"",:path=>"/group1"})
    end
    #在目录"/"下添加单用户user1
    assert_hope("成功") do
      @usermanage.add_single_user({:login_name => "user1",:description => "test",
          :show_name=>"howard",:path=>"/",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"8.8.8.1",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在默认组下添加单用户user2
    assert_hope("成功") do
      @usermanage.add_single_user({:login_name => "user2",:description => "test",
          :show_name=>"howard",:path=>"/默认组",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"8.8.8.2",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在目录"/group1/group2"下添加单用户user3 用户和地址双向绑定 绑定IP
    assert_hope("成功") do
      @usermanage.add_single_user({:login_name => "user3",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"8.8.8.3",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在目录"/group1/group2"下添加单用户user3 用户和地址双向绑定 绑定IP 同名失败
    assert_hope("失败") do
      @usermanage.add_single_user({:login_name => "user3",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"8.8.8.100",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在目录"/group1/group2"下添加单用户user200 用户和地址双向绑定 绑定IP IP地址相同失败
    assert_hope("失败") do
      @usermanage.add_single_user({:login_name => "user200",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"8.8.8.3",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在目录"/group1/group2"下添加单用户user200 用户和地址双向绑定 绑定IP 两次密码不一致失败
    assert_hope("失败") do
      @usermanage.add_single_user({:login_name => "user200",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"1234567",:bind_ip_mac=>"是",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"8.8.8.200",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在目录"/group1/group2"下添加单用户user4 没有密码，不绑定ipmac，永不过期
    assert_hope("成功") do
      @usermanage.add_single_user({:login_name => "user4",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"否",:passwd=>"",
          :confirm_passwd=>"",:bind_ip_mac=>"否",:bind_method=>"用户和地址双向绑定",
          :bind_type=>"绑定IP",:ip_macs=>"",:public_account=>"否",:logout_popup=>"否",
          :expire_type=>"永不过期",:expire_time=>""})
    end
    #在目录"/group1/group2"下添加单用户user5 用户和地址单向绑定 绑定mac
    assert_hope("成功") do
      @usermanage.add_single_user({:login_name => "user5",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址单向绑定",
          :bind_type=>"绑定MAC",:ip_macs=>"11-11-11-11-11-11",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
    #在目录"/group1/group2"下添加单用户user6 用户和地址单向绑定 绑定IP和MAC
    assert_hope("成功") do
      @usermanage.add_single_user({:login_name => "user6",:description => "test",
          :show_name=>"howard",:path=>"/group1/group2",:local_passwd=>"是",:passwd=>"123456",
          :confirm_passwd=>"123456",:bind_ip_mac=>"是",:bind_method=>"用户和地址单向绑定",
          :bind_type=>"绑定IP和MAC",:ip_macs=>"8.8.8.4(11-11-11-11-11-11)",:public_account=>"是",:logout_popup=>"是",
          :expire_type=>"指定过期时间",:expire_time=>"2011-12-31 19:21"})
    end
  end

  def test_delete_users
    #在目录"/100"下删除用户user3(howard)&user4(howard)&user5(howard)&user6(howard)
    assert_hope("路径错误") do
      @usermanage.delete_users({:user_names => "user3(howard)&user4(howard)&user5(howard)&user6(howard)",:path=>"/100"})
    end
    #在目录"/"下删除用户user100
    assert_hope("该用户不存在") do
      @usermanage.delete_users({:user_names => "user100",:path=>"/"})
    end
    #在目录"/group1/group2"下删除用户user3(howard)&user4(howard)&user5(howard)&user6(howard)
    assert_hope("成功") do
      @usermanage.delete_users({:user_names => "user3(howard)&user4(howard)&user5(howard)&user6(howard)",:path=>"/group1/group2"})
    end
    #在默认组下删除用户user2(howard)
    assert_hope("成功") do
      @usermanage.delete_users({:user_names => "user2(howard)",:path=>"/默认组"})
    end
    #在 / 下删除用户user1(howard)
    assert_hope("成功") do
      @usermanage.delete_users({:user_names => "user1(howard)",:path=>"/"})
    end
    #删除路径/group1下的用户组group1&group2
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "group1&group2",:path=>"/group1"})
    end
    #删除路径/下的用户组group1&group2
    assert_hope("成功") do
      @usermanage.delete_user_group({:group_names => "group1&group2",:path=>"/"})
    end
  end
  
end