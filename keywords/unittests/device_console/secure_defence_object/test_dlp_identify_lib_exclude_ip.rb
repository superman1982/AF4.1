# coding: utf8
#
# This file is generated by att util tool.
# by 2012-08-25 08:44:37
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestDlpIdentifyLibExcludeIp < Test::Unit::TestCase
  
  
  def setup      
    @common = Common.new
    @test_obj = keyword_proxy_for_class_name( DeviceConsole::SecureDefenceObject::DlpIdentifyLibExcludeIp ).new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
    make_hash_new
    make_hash_edit
    make_hash_del
    
    
  end
  def make_hash_new
    # => 多个IP地址带IP区域
    @hash_new_1 = { :exclude_ip => "3.4.5.6-5.6.8.7&63.21.56.10", :hope => "成功"}
    # => 单个正常IP
    @hash_new_2 = { :exclude_ip => "63.21.56.10", :hope => "成功"}
    # => 格式不对的数据
    @hash_new_3 = { :exclude_ip => "asd", :hope => "失败"}
  end
  def make_hash_edit
    # => 编辑部分name也有删除部分的属性不准确问题,需要修正
    @hash_edit_1 = { :name => "1", :exclude_ip => "4.2.5.6", :hope => "成功"}
    @hash_edit_2 = { :name => "2", :exclude_ip => "4.2.5.6&3.3.3.33", :hope => "成功"}
    @hash_edit_3 = { :name => "500", :exclude_ip => "", :hope => "失败"}
    
  end
  def make_hash_del
    # => 部分删除不准确,names的值不确定,跟编号没有关系的...是一个隐藏的ID
    @hash_del_1 = { :delete_type => "部分删除", :names => "1", :hope => "成功"}
    @hash_del_all = { :delete_type => "全部删除", :names => "2", :hope => "成功"}
    @hash_del_3 = { :delete_type => "部分删除", :names => "100", :hope => "失败"}
    
  end
  
  def test_new_dlp_exclude_ip
    puts("这里是 test_new_dlp_exclude_ip ...测 新建 ===================@@Woolen Test@@====================")
    assert_success do
      @test_obj.new_dlp_exclude_ip(@hash_new_1)
    end
    assert_success do
      @test_obj.new_dlp_exclude_ip(@hash_new_2)
    end  
    assert_fail do
      @test_obj.new_dlp_exclude_ip(@hash_new_2)
    end  
  end
  
  def test_edit_dlp_exclude_ip
    puts("这里是 test_edit_dlp_exclude_ip ...测 编辑 ===================@@Woolen Test@@====================")
    assert_success do
      @test_obj.new_dlp_exclude_ip(@hash_new_1)
    end
    assert_success do
      @test_obj.new_dlp_exclude_ip(@hash_new_2)
    end  
    assert_success do
      @test_obj.edit_dlp_exclude_ip(@hash_edit_1)
    end  
    assert_success do
      @test_obj.edit_dlp_exclude_ip(@hash_edit_2)
    end  
    assert_fail do
      @test_obj.edit_dlp_exclude_ip(@hash_edit_3)
    end  
  end
  
  def test_del_dlp_exclude_ip
    puts("这里是 test_del_dlp_exclude_ip ... ===================@@Woolen Test@@====================")
    assert_success do
      @test_obj.new_dlp_exclude_ip(@hash_new_1)
    end  
    assert_success do
      @test_obj.new_dlp_exclude_ip(@hash_new_2)
    end  
    assert_success do
      @test_obj.del_dlp_exclude_ip(@hash_del_1)
    end  
    assert_fail do
      @test_obj.del_dlp_exclude_ip(@hash_del_3)
    end  
    assert_success do
      @test_obj.del_dlp_exclude_ip(@hash_del_all)
    end  
  end
  
  def teardown
    puts("这里是 teardown ... ===================@@Woolen Test@@====================")
    assert_success do
      @test_obj.del_dlp_exclude_ip(@hash_del_all)
    end
  end
end