#
# This file is generated by att util tool.
# by 2011-12-07 11:44:39
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestInterfaceZone < Test::Unit::TestCase

  def setup
    @common = Common.new
    @interface_zone = DeviceConsole::NetConfig::InterfaceZone.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end

  def test_edit_physical_interface
    # 编辑不存在的接口,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_fail do
      @interface_zone.edit_physical_interface( { :name => "notexisted", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
    # 不启用此接口,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "否", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "是",
          :type => "路由", :link_type => "静态IP", :zone => "", :address => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :adsl_status => "无效", :mtu => "2000", :work_mode => "半双工10M", :enable_ping => "允许", :interface_status => "正常",
          :link_status => "故障", :status => "禁用"} )
    end
    # 路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "是",
          :type => "路由", :link_type => "静态IP", :zone => "", :address => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :adsl_status => "无效", :mtu => "2000", :work_mode => "半双工10M", :enable_ping => "允许", :interface_status => "正常",
          :link_status => "故障", :status => "启用"} )
    end
    # 路由接口类型,静态IP连接类型,PING解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "否", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "否",
          :type => "路由", :link_type => "静态IP", :zone => "", :address => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "拒绝", :interface_status => "正常",
          :link_status => "故障", :status => "启用"} )
    end
    # 路由接口类型,静态IP连接类型,不启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "否", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "否",
          :type => "路由", :link_type => "静态IP", :zone => "", :address => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "拒绝", :interface_status => "正常",
          :link_status => "未检测", :status => "启用"} )
    end
    # 路由接口类型,DHCP连接类型,启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "DHCP", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "是", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "是",
          :type => "路由", :link_type => "DHCP", :zone => "", :address => "",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "允许", :interface_status => "正常",
          :link_status => "故障", :status => "启用"} )
    end
    # 路由接口类型,DHCP连接类型,不启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "否", :link_type => "DHCP", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "否",
          :type => "路由", :link_type => "DHCP", :zone => "", :address => "",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "拒绝", :interface_status => "正常",
          :link_status => "故障", :status => "启用"} )
    end
    # 路由接口类型,ADSL拨号连接类型,启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "ADSL拨号", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "222", :adsl_passwd => "222222",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "否",
          :adsl_add_default_route => "是", :adsl_first_dns => "是", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述描述", :is_wan => "是",
          :type => "路由", :link_type => "ADSL拨号", :zone => "", :address => "",
          :adsl_status => "断开", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "允许", :interface_status => "正常",
          :link_status => "故障", :status => "启用"} )
    end
    # 路由接口类型,ADSL拨号连接类型,不启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "否", :link_type => "ADSL拨号", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "222", :adsl_passwd => "222222",
          :adsl_shake_time => "30", :adsl_timeout => "100", :adsl_retry_times => '5', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "DNS解析", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述", :is_wan => "否",
          :type => "路由", :link_type => "ADSL拨号", :zone => "", :address => "",
          :adsl_status => "断开", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "拒绝", :interface_status => "正常",
          :link_status => "未检测", :status => "启用"} )
    end
    # 透明接口类型,Access连接类型,是WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "透明",
          :is_wan => "是", :enable_ping => "是", :link_type => "Access", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "2", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述描述", :is_wan => "是",
          :type => "透明", :link_type => "无效", :zone => "", :address => "无效",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "无效", :interface_status => "正常",
          :link_status => "无效", :status => "启用"} )
    end
    # 透明接口类型,Access连接类型,非WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "透明",
          :is_wan => "否", :enable_ping => "是", :link_type => "Access", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述描述", :is_wan => "否",
          :type => "透明", :link_type => "无效", :zone => "", :address => "无效",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "无效", :interface_status => "正常",
          :link_status => "无效", :status => "启用"} )
    end
    # 透明接口类型,Trunk连接类型,非WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "透明",
          :is_wan => "否", :enable_ping => "是", :link_type => "Trunk", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 透明接口类型,Trunk连接类型,是WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "透明",
          :is_wan => "是", :enable_ping => "是", :link_type => "Trunk", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 虚拟网线接口类型,非WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "虚拟网线",
          :is_wan => "否", :enable_ping => "是", :link_type => "静态IP", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述描述", :is_wan => "否",
          :type => "虚拟网线", :link_type => "无效", :zone => "", :address => "无效",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "无效", :interface_status => "正常",
          :link_status => "无效", :status => "启用"} )
    end
    # 虚拟网线接口类型,是WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "虚拟网线",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "描述描述", :is_wan => "是",
          :type => "虚拟网线", :link_type => "无效", :zone => "", :address => "无效",
          :adsl_status => "无效", :mtu => "1500", :work_mode => "自动协商", :enable_ping => "无效", :interface_status => "正常",
          :link_status => "无效", :status => "启用"} )
    end
    # 路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
  end

  def test_enable_disable_physical_interface
     assert_success do
       @interface_zone.enable_disable_physical_interface({:names => "eth2|eth3", :operation => "启用"})
     end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "", :is_wan => "忽略",
          :type => "忽略", :link_type => "忽略", :zone => "", :address => "",
          :adsl_status => "忽略", :mtu => "", :work_mode => "忽略", :enable_ping => "忽略", :interface_status => "正常",
          :link_status => "忽略", :status => "启用"} )
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth3", :description => "", :is_wan => "忽略",
          :type => "忽略", :link_type => "忽略", :zone => "", :address => "",
          :adsl_status => "忽略", :mtu => "", :work_mode => "忽略", :enable_ping => "忽略", :interface_status => "正常",
          :link_status => "忽略", :status => "启用"} )
    end
    assert_success do
      @interface_zone.enable_disable_physical_interface({:names => "eth2|不存在的接口", :operation => "禁用"})
    end
    # 检查接口设置
    assert_success do
      @interface_zone.check_physical_interface( {:name => "eth2", :description => "", :is_wan => "忽略",
          :type => "忽略", :link_type => "忽略", :zone => "", :address => "",
          :adsl_status => "忽略", :mtu => "", :work_mode => "忽略", :enable_ping => "忽略", :interface_status => "正常",
          :link_status => "忽略", :status => "禁用"} )
    end
     assert_success do
       @interface_zone.enable_disable_physical_interface({:names => "eth2|eth3", :operation => "启用"})
     end
  end

  def test_adsl_dial_on_physical_interface
    # 路由接口类型,ADSL拨号连接类型,不启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "否", :link_type => "ADSL拨号", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "222", :adsl_passwd => "222222",
          :adsl_shake_time => "30", :adsl_timeout => "100", :adsl_retry_times => '5', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "DNS解析", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    assert_hope("拨号连接失败") do
      @interface_zone.adsl_dial_on_physical_interface({:name => "eth2"})
    end
  end

  def test_restore_default_mac_on_physical_interface()
    mac_address = @interface_zone.restore_default_mac_on_physical_interface({:name => "eth2"})
    # 路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "#{mac_address}" } )
    end
  end

  def test_add_sub_interface_on_physical_interface()
    # 删除所有的子接口
    assert_success do
      @interface_zone.delete_sub_interfaces({:delete_type => "全部删除"})
    end
    # 允许ping,连接类型是静态IP,启用链路故障检测,检测方法是ping
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "1",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.5/24&6.6.6.6/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "5", :mtu => "1500"})
    end
    # 检查子接口设置
    assert_success do
      @interface_zone.check_sub_interface( {:name => "eth2.1", :description => "描述", :zone => "", 
          :address => "5.5.5.5/24&6.6.6.6/255.255.255.0", :mtu => "1500", :enable_ping => "允许",:link_status => "故障"} )
    end
    # 允许ping,连接类型是静态IP,启用链路故障检测,检测方法是DNS解析
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "2",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.6/24&6.6.6.7/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "DNS解析", :dns_server => "4.4.4.4", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查子接口设置
    assert_success do
      @interface_zone.check_sub_interface( {:name => "eth2.2", :description => "描述", :zone => "",
          :address => "5.5.5.6/24&6.6.6.7/255.255.255.0", :mtu => "1500", :enable_ping => "允许",:link_status => "故障"} )
    end
    # 删除子接口
    assert_success do
      @interface_zone.delete_sub_interfaces({:delete_type => "部分删除", :names => "eth2.1|eth2.2"})
    end
    # 不允许ping,连接类型是静态IP,不启用链路故障检测
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "3",
        :description => "描述",:enable_ping => "否", :link_type => "静态IP", :static_ip => "5.5.5.7/24&6.6.6.8/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查子接口设置
    assert_success do
      @interface_zone.check_sub_interface( {:name => "eth2.3", :description => "描述", :zone => "",
          :address => "5.5.5.7/24&6.6.6.8/255.255.255.0", :mtu => "1500", :enable_ping => "拒绝",:link_status => "未检测"} )
    end
    # 允许ping,连接类型是DHCP,启用链路故障检测,检测方法是ping
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "4",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查子接口设置
    assert_success do
      @interface_zone.check_sub_interface( {:name => "eth2.4", :description => "描述", :zone => "",
          :address => "", :mtu => "1500", :enable_ping => "允许",:link_status => "故障"} )
    end
    # 允许ping,连接类型是DHCP,启用链路故障检测,检测方法是DNS解析
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "5",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "是",
        :check_method => "DNS解析", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查子接口设置
    assert_success do
      @interface_zone.check_sub_interface( {:name => "eth2.5", :description => "描述", :zone => "",
          :address => "", :mtu => "1500", :enable_ping => "允许",:link_status => "故障"} )
    end
    # 删除子接口
    assert_success do
      @interface_zone.delete_sub_interfaces({:delete_type => "部分删除", :names => "eth2.3|eth2.4|eth2.5"})
    end
    # 删除不存在的子接口
    assert_fail do
      @interface_zone.delete_sub_interfaces({:delete_type => "部分删除", :names => "不存在的子接口"})
    end
    # 允许ping,连接类型是DHCP,不启用链路故障检测
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "6",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查子接口设置
    assert_success do
      @interface_zone.check_sub_interface( {:name => "eth2.6", :description => "描述", :zone => "",
          :address => "", :mtu => "1500", :enable_ping => "允许",:link_status => "未检测"} )
    end
    # 不允许ping,连接类型是DHCP,不启用链路故障检测
    assert_success do
      @interface_zone.add_sub_interface_on_physical_interface({:name => "eth2", :vlan_id => "7",
        :description => "描述",:enable_ping => "否", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 删除所有的子接口
    assert_success do
      @interface_zone.delete_sub_interfaces({:delete_type => "全部删除"})
    end

    # 检查不存在的子接口设置
    assert_hope("子接口不存在") do
      @interface_zone.check_sub_interface( {:name => "不存在的子接口", :description => "描述", :zone => "",
          :address => "", :mtu => "1500", :enable_ping => "允许",:link_status => "未检测"} )
    end
  end

  def test_add_vlan_interface()
    # 删除所有的Vlan接口
    assert_success do
      @interface_zone.delete_vlan_interfaces({:delete_type => "全部删除"})
    end
    # 允许ping,连接类型是静态IP,启用链路故障检测,检测方法是ping
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "1",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.5/24&6.6.6.6/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "5", :mtu => "1500"})
    end
    # 检查VLAN接口设置
    assert_success do
      @interface_zone.check_vlan_interface({:name => "veth.1", :description => "描述", :zone => "",
          :link_type => "静态IP", :address => "5.5.5.5/24&6.6.6.6/255.255.255.0", :mtu => "1500",
          :enable_ping => "允许", :link_status => "忽略"})
    end
    # 允许ping,连接类型是静态IP,启用链路故障检测,检测方法是DNS解析
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "2",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.6/24&6.6.6.7/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "DNS解析", :dns_server => "4.4.4.4", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查VLAN接口设置
    assert_success do
      @interface_zone.check_vlan_interface({:name => "veth.2", :description => "描述", :zone => "",
          :link_type => "静态IP", :address => "5.5.5.6/24&6.6.6.7/255.255.255.0", :mtu => "1500",
          :enable_ping => "允许", :link_status => "忽略"})
    end
    # 删除Vlan接口
    assert_success do
      @interface_zone.delete_vlan_interfaces({:delete_type => "部分删除", :names => "veth.1&veth.2"})
    end
    # 不允许ping,连接类型是静态IP,不启用链路故障检测
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "3",
        :description => "描述",:enable_ping => "否", :link_type => "静态IP", :static_ip => "5.5.5.7/24&6.6.6.8/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 检查VLAN接口设置
    assert_success do
      @interface_zone.check_vlan_interface({:name => "veth.3", :description => "描述", :zone => "",
          :link_type => "静态IP", :address => "5.5.5.7/24&6.6.6.8/255.255.255.0", :mtu => "1500",
          :enable_ping => "拒绝", :link_status => "未检测"})
    end
    # 允许ping,连接类型是DHCP,启用链路故障检测,检测方法是ping
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "4",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 允许ping,连接类型是DHCP,启用链路故障检测,检测方法是DNS解析
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "5",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "是",
        :check_method => "DNS解析", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 删除Vlan接口
    assert_success do
      @interface_zone.delete_vlan_interfaces({:delete_type => "部分删除", :names => "veth.3&veth.4&veth.5"})
    end
    # 删除不存在的Vlan接口
    assert_fail do
      @interface_zone.delete_vlan_interfaces({:delete_type => "部分删除", :names => "不存在的Vlan接口"})
    end
    # 允许ping,连接类型是DHCP,不启用链路故障检测
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "6",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 不允许ping,连接类型是DHCP,不启用链路故障检测
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "7",
        :description => "描述",:enable_ping => "否", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 删除所有的Vlan接口
    assert_success do
      @interface_zone.delete_vlan_interfaces({:delete_type => "全部删除"})
    end
  end

  def test_edit_vlan_interface()
    # 新增vlan接口,允许ping,连接类型是静态IP,启用链路故障检测,检测方法是ping
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "1",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.5/24&6.6.6.6/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "5", :mtu => "1500"})
    end
    # 编辑vlan接口,不允许ping,连接类型是静态IP,启用链路故障检测,检测方法是DNS解析
    assert_success do
      @interface_zone.edit_vlan_interface({:name => "veth.1",
        :description => "描述描述",:enable_ping => "否", :link_type => "静态IP", :static_ip => "5.5.5.5/24&6.6.6.6/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "DNS解析", :dns_server => "4.4.4.4", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 编辑vlan接口,允许ping,连接类型是静态IP,不启用链路故障检测
    assert_success do
      @interface_zone.edit_vlan_interface({:name => "veth.1",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.5/24&6.6.6.6/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1200"})
    end
    # 编辑vlan接口,允许ping,连接类型是DHCP,启用链路故障检测,检测方法是DNS解析
    assert_success do
      @interface_zone.edit_vlan_interface({:name => "veth.1",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "是",
        :check_method => "DNS解析", :dns_server => "4.4.4.4", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 编辑vlan接口,不允许ping,连接类型是DHCP,启用链路故障检测,检测方法是PING
    assert_success do
      @interface_zone.edit_vlan_interface({:name => "veth.1",
        :description => "描述",:enable_ping => "否", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 编辑vlan接口,允许ping,连接类型是DHCP,不启用链路故障检测
    assert_success do
      @interface_zone.edit_vlan_interface({:name => "veth.1",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 删除所有的Vlan接口
    assert_success do
      @interface_zone.delete_vlan_interfaces({:delete_type => "全部删除"})
    end
    # 新增vlan接口,允许ping,连接类型是静态IP,启用链路故障检测,检测方法是ping
    assert_success do
      @interface_zone.add_vlan_interface({:vlan_id => "10",
        :description => "描述",:enable_ping => "是", :link_type => "静态IP", :static_ip => "5.5.5.5/24&6.6.6.6/255.255.255.0",
        :gateway => "200.200.200.200", :get_default_gw => "否", :enable_link_trouble_check => "是",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "5", :mtu => "1500"})
    end
    # 编辑vlan接口,新名称
    assert_fail do
      @interface_zone.edit_vlan_interface({:name => "veth.10", :new_name => "veth.12",
        :description => "描述",:enable_ping => "是", :link_type => "DHCP", :static_ip => "",
        :gateway => "", :get_default_gw => "是", :enable_link_trouble_check => "否",
        :check_method => "PING", :dns_server => "", :dns_domain => "www.sangfor.com", :ping_ip => "202.96.137.23",
        :check_interval => "2", :mtu => "1500"})
    end
    # 删除所有的Vlan接口
    assert_success do
      @interface_zone.delete_vlan_interfaces({:delete_type => "全部删除"})
    end
  end

  def test_add_zone
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 设置物理接口,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone1", :forward_type => "三层区域", :interfaces => "eth2", 
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 新增区域
    assert_hope("转发类型与接口不匹配") do
      @interface_zone.add_zone(:name => "zone0", :forward_type => "虚拟网线区域", :interfaces => "eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 删除区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "部分删除", :names => "zone1"})
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone2", :forward_type => "三层区域", :interfaces => "eth2",
        :enable_webui => "否", :enable_ssh => "否", :enable_snmp => "否", :manage_address => "全部")
    end
    # 删除区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "部分删除", :names => "zone2"})
    end
    # 透明接口类型,Access连接类型,非WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "透明",
          :is_wan => "否", :enable_ping => "是", :link_type => "Access", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone3", :forward_type => "二层区域", :interfaces => "eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 删除区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "部分删除", :names => "zone3"})
    end
    # 虚拟网线接口类型,非WAN口
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述描述", :type => "虚拟网线",
          :is_wan => "否", :enable_ping => "是", :link_type => "静态IP", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "否", :check_method => "PING", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone4", :forward_type => "虚拟网线区域", :interfaces => "eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 删除区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "部分删除", :names => "zone4"})
    end
    # 设置物理接口,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
  end

  def test_edit_zone
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 设置物理接口eth2,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth2", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.22/255.255.255.0&33.33.33.33/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
    # 设置物理接口eth1,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth1", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.23/255.255.255.0&33.33.33.34/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end
    # 设置物理接口eth3,路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth3", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "是", :link_type => "静态IP", :static_ip => "22.22.22.24/255.255.255.0&33.33.33.35/24",
          :gateway => "200.200.200.200", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "100MB/s", :down_bandwidth => "2KB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "4.4.4.4",
          :dns_domain => "www.sangfor.com", :check_interval => "5", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "半双工10M", :mtu => 2000, :mac => "" } )
    end

    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone5", :forward_type => "三层区域", :interfaces => "eth1|eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 编辑区域
    assert_success do
      @interface_zone.edit_zone(:name => "zone5", :forward_type => "三层区域", :interfaces => "eth1|eth3",
        :enable_webui => "否", :enable_ssh => "否", :enable_snmp => "否", :manage_address => "全部")
    end
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone6", :forward_type => "三层区域", :interfaces => "eth1|eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 编辑区域
    assert_success do
      @interface_zone.edit_zone(:name => "zone6", :forward_type => "三层区域", :interfaces => "eth3",
        :enable_webui => "否", :enable_ssh => "否", :enable_snmp => "否", :manage_address => "全部")
    end
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone7", :forward_type => "三层区域", :interfaces => "eth1|eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 编辑区域
    assert_success do
      @interface_zone.edit_zone(:name => "zone7", :forward_type => "三层区域", :interfaces => "eth1|eth2",
        :enable_webui => "否", :enable_ssh => "否", :enable_snmp => "否", :manage_address => "全部")
    end
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone8", :forward_type => "三层区域", :interfaces => "eth1|eth2",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 编辑区域
    assert_success do
      @interface_zone.edit_zone(:name => "zone8", :forward_type => "三层区域", :interfaces => "eth1|eth2|eth3",
        :enable_webui => "否", :enable_ssh => "否", :enable_snmp => "否", :manage_address => "全部")
    end
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
  end

  def test_enable_disable_interface_linkage
    # 禁用
    assert_success do
      @interface_zone.enable_disable_interface_linkage({:operation => "禁用"})
    end
    # 启用
    assert_success do
      @interface_zone.enable_disable_interface_linkage({:operation => "启用"})
    end
    # 禁用
    assert_success do
      @interface_zone.enable_disable_interface_linkage({:operation => "禁用"})
    end
  end

  def test_add_interface_linkage
    # 删除接口联动
    assert_success do
      @interface_zone.delete_interface_linkage({:delete_type => "全部删除", :names => ""})
    end
    # 启用
    assert_success do
      @interface_zone.enable_disable_interface_linkage({:operation => "启用"})
    end
    # 新增接口联动
    assert_success do
      @interface_zone.add_interface_linkage({:name => "linkage1", :interfaces => "eth1"})
    end
    # 新增接口联动
    assert_success do
      @interface_zone.add_interface_linkage({:name => "linkage2", :interfaces => "eth2"})
    end
    # 新增接口联动
    assert_fail do
      @interface_zone.add_interface_linkage({:name => "linkage3", :interfaces => "eth1&eth2"})
    end
    # 新增接口联动
    assert_fail do
      @interface_zone.add_interface_linkage({:name => "linkage4", :interfaces => "不存在的接口"})
    end
    # 删除接口联动
    assert_success do
      @interface_zone.delete_interface_linkage({:delete_type => "部分删除", :names => "linkage1"})
    end
    # 删除接口联动
    assert_success do
      @interface_zone.delete_interface_linkage({:delete_type => "全部删除", :names => ""})
    end
  end

end