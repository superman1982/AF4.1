# coding: utf8
#
# This file is generated by att util tool.
# by 2012-08-30 11:58:01
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestHttpServer < Test::Unit::TestCase
  def setup
    #you can use $local_pc_network_server_http_server to quote hash as argument.
    @test_obj = keyword_proxy_for_class_name( LocalPc::NetworkServer::HttpServer ).new
    $stdouttype = "utf-8"
    #@test_obj = LocalPc::NetworkServer::HttpServer.new
  end
  
  def test_startup_service
    assert_success do
      puts "启动10秒,访问D盘"
      @test_obj.startup_service({:is_ssl => "是", :root_dir =>"d:/test/", :port => "8088", :http_edition => "1.0",:respone_code => 404, :respone_head_cookie =>"5:sb_use_this=abcd", :respone_head =>"Accept-Ranges: bytes", :run_time => "100", 
                                  :root_cert_1 => "1024$:$3$:$RSA$:$Sangfor_root_ca",:child_cert => "1024$:$3$:$RSA$:$Sangfor_child_ca" })
      #@test_obj.startup_service({:root_dir =>"d:/test/", :port => "8088", :run_time => "100" })
      #@test_obj.startup_service({:root_dir =>"d:/test/", :port => "8088", :run_time => "100" })
      #@test_obj.startup_service({:root_dir =>"d:/test/", :port => "8088", :run_time => "100" })
      #@test_obj.startup_service({:root_dir =>"d:/test/", :port => "8088", :run_time => "100" })
    end
    #assert_fail do
    #  puts "启动100秒,访问同一个端口======"
    #  @test_obj.startup_service({:root_dir =>"./", :port => "8080", :run_time => "10" })
    #end
    #assert_success do
    #  puts "启动10秒,访问./"
    #  @test_obj.startup_service({:root_dir =>"C:/", :port => "8081", :run_time => "1" })
    #end
    sleep 1000
  end
  
end