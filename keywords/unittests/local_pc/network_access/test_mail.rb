#
# This file is generated by att util tool.
# by 2011-12-09 14:20:00
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestMail < Test::Unit::TestCase
  def setup
    
    @network_mail = LocalPc::NetworkAccess::Mail.new
  end
  
  def test_send_mail_attachment
    # 发送邮件
    assert_success do
      @network_mail.send_mail_attachment({:title => "邮件标题",:content => "邮件内容", :attachment => "",\
            :mail_server => $common["MailServer"], :port => "#{$common["SmtpPort"]}", :domain => "#{$common["MailDomain"]}",\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}", :sender => "#{$common["MailSender"]}", \
            :receiver => "#{$common["MailSender"]}", :copy_receiver => "", :passwd_receiver => ""})
    end
    # 接收邮件并检查后,删除邮件
    assert_success do
      @network_mail.receive_and_check_mail({:delete => "是", :server => $common["MailServer"], :port => $common["Pop3Port"],\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}", :subject => "邮件标题",\
            :content => "邮件内容", :sender => "#{$common["MailSender"]}", :receiver => "#{$common["MailSender"]}", :path => ""})
    end
    # 接收邮件并检查
    assert_hope("无邮件") do
      @network_mail.receive_and_check_mail({:delete => "是", :server => $common["MailServer"], :port => $common["Pop3Port"],\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}", :subject => "邮件标题",\
            :content => "邮件内容", :sender => "#{$common["MailSender"]}", :receiver => "#{$common["MailSender"]}", :path => ""})
    end
    # 发送邮件
    assert_success do
      @network_mail.send_mail_attachment({:title => "邮件标题",:content => "邮件内容", :attachment => "",\
            :mail_server => $common["MailServer"], :port => "#{$common["SmtpPort"]}", :domain => "#{$common["MailDomain"]}",\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}", :sender => "#{$common["MailSender"]}", \
            :receiver => "#{$common["MailSender"]}", :copy_receiver => "", :passwd_receiver => ""})
    end
    # 发送邮件
    assert_success do
      @network_mail.send_mail_attachment({:title => "邮件标题",:content => "邮件内容", :attachment => "",\
            :mail_server => $common["MailServer"], :port => "#{$common["SmtpPort"]}", :domain => "#{$common["MailDomain"]}",\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}", :sender => "#{$common["MailSender"]}", \
            :receiver => "#{$common["MailSender"]}", :copy_receiver => "", :passwd_receiver => ""})
    end
    # 删除所有的邮件
    assert_hope("删除成功") do
      @network_mail.delete_all_mails_in_mailserver({:server => $common["MailServer"], :port => $common["Pop3Port"],\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}"})
    end
    # 接收邮件并检查
    assert_hope("无邮件") do
      @network_mail.receive_and_check_mail({:delete => "是", :server => $common["MailServer"], :port => $common["Pop3Port"],\
            :user => "#{$common["MailUser"]}", :passwd => "#{$common["MailPasswd"]}", :subject => "邮件标题",\
            :content => "邮件内容", :sender => "#{$common["MailSender"]}", :receiver => "#{$common["MailSender"]}", :path => ""})
    end
  end
  
end