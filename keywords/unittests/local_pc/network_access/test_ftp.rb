# coding: utf8
#
# This file is generated by att util tool.
# by 2011-12-09 10:53:12
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "utf-8"

class TestFtp < Test::Unit::TestCase
  def setup
    @network_ftp = LocalPc::NetworkAccess::Ftp.new
  end
=begin  
  def test_ftp_download_and_upload
    # 主动下载
    assert_success do
      @network_ftp.ftp_download({:mode => "主动", :ip => $common["FtpServer"], :user => $common["FtpUser"],
          :passwd => $common["FtpPasswd"], :port => "21", :remote_file => "/hello.txt", :saveas => "主动_hello.txt"})
    end
    # 被动下载
    assert_success do
      @network_ftp.ftp_download({:mode => "被动", :ip => $common["FtpServer"], :user => $common["FtpUser"],
          :passwd => $common["FtpPasswd"], :port => "21", :remote_file => "/hello.txt", :saveas => "被动_hello.txt"})
    end
    # 主动上传
    assert_success do
      @network_ftp.ftp_upload({:mode => "主动", :ip => $common["FtpServer"], :user => $common["FtpUser"],
          :passwd => $common["FtpPasswd"], :port => "21", :localfile => "主动_hello.txt", :remote_dir => "/"})
    end
    # 被动上传
    assert_success do
      @network_ftp.ftp_upload({:mode => "被动", :ip => $common["FtpServer"], :user => $common["FtpUser"],
          :passwd => $common["FtpPasswd"], :port => "21", :localfile => "被动_hello.txt", :remote_dir => "/"})
    end
  end
=end
  def test_ftp_blast
    assert_success do
      puts "测10个连接,10次尝试 "
      @network_ftp.ftp_blast({:ip => $common["FtpServer"], :port => "21", :connects => "5", :times => "1"})
    end
    assert_success do
      puts "测0个连接,1次尝试 "
      @network_ftp.ftp_blast({:ip => $common["FtpServer"], :port => "21", :connects => "0", :times => "1"})
    end
    assert_success do
      puts "测1个连接,0次尝试 "
      @network_ftp.ftp_blast({:ip => $common["FtpServer"], :port => "21", :connects => "1", :times => "0"})
    end
    assert_success do
      puts "测 0 个连接, 0 次尝试 "
      @network_ftp.ftp_blast({:ip => $common["FtpServer"], :port => "21", :connects => "0", :times => "0"})
    end
  end

  def test_ftp_check_respone
    assert_success do
      puts "测过设备,隐藏FTP服务器 "
      @network_ftp.ftp_check_respone({:ip => $common["FtpServer"], :port => "21", :checkpoint => "^[0-9]{3} FTP Service", :time_out => "10"})
    end
    assert_fail do
      puts "不过设备,不隐藏 "
      @network_ftp.ftp_check_respone({:ip => "200.200.89.101", :port => "21", :checkpoint => "^[0-9]{3} FTP Service", :time_out => "5"})
    end
  end  
end