# coding: utf8
# 
# This file is generated by att util tool.
# by 2011-12-09 10:45:04
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestHttp < Test::Unit::TestCase
  
  def setup
    @http = LocalPc::NetworkAccess::Http.new
    @common = Common.new
    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end

  def test_access_http_web_site
    assert_success do
      @http.access_http_web_site({:address => $common["WebServiceAddr"], :checkpoint => "没啥好说的"})
    end
  end

  def test_login_tianya_web_site
    # 登录天涯
    assert_success do
      @http.login_tianya_web_site({:address => $common["TianYaAddress"], :user => $common["TianYaUser"], :passwd => $common["TianYaPasswd"]})
    end
  end

  def test_url_request
    # HTTP请求
    assert_success do
      @http.url_request({:host => "www.baidu.com", :port => "80", :dest_url => "/search/error.html"})
    end
    assert_success do
      @http.url_request({:host => "www.baidu.com", :port => "80", :dest_url => "/" })
    end
    assert_fail do
      @http.url_request({:host => "www.baidu.com", :port => "80", :dest_url => "/search/error.html1"})
    end
  end

  def test_http_request
    #HTTP方法请求
    @get_hash={:address => "200.200.88.201",:port => "80",:method => "GET",:request => "/ HTTP/1.1CRLF",:accept => "text/html, application/xhtml+xml, */*",
      :accept_encoding => "gzip, deflate",:accept_language => "zn-CN",:connection => "Keep-Alive",
      :agent => "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",:cookie => "",
      :other => "",:content => "",:checkpoint => ""}
    @get_hash1={:address => "200.200.88.201",:port => "80",:method => "GET",:request => "/ HTTP/1.1",:accept => "text/html, application/xhtml+xml, */*",
      :accept_encoding => "gzip, deflate",:accept_language => "zn-CN",:connection => "Keep-Alive",
      :agent => "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",:cookie => "",
      :other => "",:content => "",:checkpoint => ""}
    @get_hash2={:address => "200.200.88.201",:port => "80",:method => "GET",:request => "/ HTTP/1.1CRLF",:accept => "text/html, application/xhtml+xml, */*",
      :accept_encoding => "gzip, deflate",:accept_language => "zn-CN",:connection => "Keep-Alive",
      :agent => "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",:cookie => "",
      :other => "",:content => "",:checkpoint => "Server: Microsoft-IIS/6.0"}
    @post_hash={:address => "200.200.88.202",:port => "89",:method => "POST",:request => "/index.asp HTTP/1.1CRLF",:accept => "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
      :accept_encoding => "gzip,deflate,sdch",:accept_language => "zh-CN,zh;q=0.8",:connection => "Keep-Alive",
      :agent => "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5",:cookie => "QYYPKBTFAEQKTOVIKUTM=SECMCZHBVLSNEQXDTPNTHASBUCNJURLJWXAZFXPS",
      :other => "Content-Length: 87\r\nReferer: http://200.200.88.201:89/index.asp?action=add\r\nAccept-Charset: GBK,utf-8;q=0.7,*;q=0.3\r\nContent-Type: application/x-www-form-urlencoded\r\nOrigin: http://200.200.88.201:89",
      :content =>"action=saveadd&id=&name=zwj&tel=123&add=131&email=1231&body=zwj1&Submit2=+%CC%E1+%BD%BB+",:checkpoint => ""}
    @head_hash={:address => "200.200.88.201",:port => "80",:method => "HEAD",:request => "/ HTTP/1.1CRLF",:accept => "text/html, application/xhtml+xml, */*",
      :accept_encoding => "gzip, deflate",:accept_language => "zn-CN",:connection => "Keep-Alive",
      :agent => "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",:cookie => "",
      :other => "",:content => "",:checkpoint => ""}
    puts "@@@@@@@@@@@@@@@正确的Get头部请求Test@@@@@@@@@@@@@@@"
    assert_success do
      @http.http_request(@get_hash)
    end
    puts "@@@@@@@@@@@@@@@错误的Get方法头部请求Test@@@@@@@@@@@@@@@"
    assert_fail do
      @http.http_request(@get_hash1)
    end
    puts "@@@@@@@@@@@@@@@响应信息检查点Test@@@@@@@@@@@@@@@"
    assert_success do
      @http.http_request(@get_hash2)
    end
    puts "@@@@@@@@@@@@@@@正确的Post方法头部请求Test@@@@@@@@@@@@@@@"
    assert_success do
      @http.http_request(@post_hash)
    end
    puts "@@@@@@@@@@@@@@@正确的head方法头部请求Test@@@@@@@@@@@@@@@"
    assert_success do
      @http.http_request(@head_hash)
    end
  end

  def test_http_force_login
    #HTTP爆破登录
    @login_hash1={:host => "200.200.88.202",:port => 89,
      :dest_url => "/index.asp?action=chk",
      :form => "userid=admin&pass=admin&Submit3=+%B5%C7+%C2%BD+",
      :times => "5"}
    @login_hash2={:host => "200.200.88.202",:port => 89,
      :dest_url => "/111index.asp?action=chk",
      :form => "userid=admin&pass=admin&Submit3=+%B5%C7+%C2%BD+",
      :times => "5"}
    puts "@@@@@@@@@正确的url暴力破解@@@@@@@@@@@@@"
    assert_success do
      @http.http_force_login(@login_hash1)
    end
    puts "@@@@@@@@@不正确的url@@@@@@@@@@@@@"
    assert_fail do
      @http.http_force_login(@login_hash2)
    end
  end
  def test_http_upload
    # 上传
    assert_success do
      @http.http_upload({:host => "127.0.0.1", :port => "8088", :dest_file => "/justfun/test.txt", :local_path => "D:/compiler.jar"})
    end
    assert_success do
      @http.http_upload({:host => "200.200.89.100", :port => "8088", :dest_file => "/", :local_path => "D:/waf.txt"})
    end
    assert_success do
      @http.http_upload({:host => "200.200.89.100", :port => "8088", :dest_file => "/adsda/", :local_path => "D:/waf.txt"})
    end
  end
  def test_http_download
    # HTTP下载
    assert_success do
      @http.http_download({:host => "127.0.0.1", :port => "8088", :dest_file => "/test.txt", :local_path => "D:/test/tt/test.txt"})
    end
  end

#  def test_pipe_line
#    assert_success do
#      @http.http_pepeline({:host => "111.168.8.103", :port => "80",
#          :url_1 => "GET /test.asp HTTP/1.1", :head_1 => "HOST: test.comCRLF",:url_2 => "GET /test.asp HTTP/1.1", :head_2 => "HOST: test.comCRLF",
#        :url_3 => "GET /test.asp HTTP/1.1", :head_3 => "HOST: test.comCRLF",:url_4 => "GET /test.asp HTTP/1.1", :head_4 => "HOST: test.comCRLF",
#        :url_7 => "GET /test.asp HTTP/1.1", :head_7 => "HOST: test.comCRLF",:url_8 => "GET /test.asp?test=123 HTTP/1.1", :head_8 => "HOST: test.comCRLF",
#      :url_5 => "GET /test.asp HTTP/1.1", :head_5 => "HOST: test.comCRLF",:url_6 => "GET /test.asp HTTP/1.1", :head_6 => "HOST: test.comCRLF",:get_times => "8"})
#    end
#    sleep 5
#  end

end