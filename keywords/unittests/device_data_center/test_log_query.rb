# coding: utf8
# 
# This file is generated by att util tool.
# by 2011-12-08 17:12:13
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestLogQuery < Test::Unit::TestCase
  
  def setup
    @log_query = DeviceDataCenter::LogQuery.new
    
    @login_dc = keyword_proxy_for_class_name( DeviceDataCenter::LoginDc ).new
    # 登录DC
    assert_success do
      @login_dc.login_dc($common["dc_login_hash"])
    end
  end
  
  def test_application_control_log_query
    assert_success do
      @log_query.application_control_log_query({:startdate => "", :starttime => "", \
            :enddate => "", :endtime => "", :source_zone => "所有区域",\
          :source_type => "所有", :source_ip => "", :source_user => "", :source_usergrp => "",
          :sub_grp => "是", :dest_zone => "所有区域", :dest_ip => "所有", :service_app => "全部",
          :services => "所有", :protocol => "ICMP", :port => "223", :apps => "所有应用", 
          :accept => "否", :refuse => "是",:record_hoped => ""})
    end
    assert_success do
      @log_query.application_control_log_query({:startdate => "2011-12-11", :starttime => "10:10", \
          :enddate => "2011-12-13", :endtime => "10:10", :source_zone => "trust",\
          :source_type => "IP", :source_ip => "192.168.101.1", :source_user => "", :source_usergrp => "",
          :sub_grp => "是", :dest_zone => "untrust", :dest_ip => "200.200.200.200", :service_app => "服务",
          :services => "ssh", :protocol => "ICMP", :port => "223", :apps => "所有应用",
          :accept => "是", :refuse => "是",:record_hoped => ""})
    end
    assert_success do
      @log_query.application_control_log_query({:startdate => "2011-12-11", :starttime => "10:10", \
            :enddate => "2011-12-13", :endtime => "10:10", :source_zone => "trust",\
          :source_type => "用户", :source_ip => "", :source_user => "user1", :source_usergrp => "",
          :sub_grp => "是", :dest_zone => "untrust", :dest_ip => "200.200.200.200", :service_app => "服务",
          :services => "自定义", :protocol => "UDP", :port => "111", :apps => "所有应用",
          :accept => "是", :refuse => "是",:record_hoped => ""})
    end
    assert_success do
      @log_query.application_control_log_query({:startdate => "2011-12-11", :starttime => "10:10", \
            :enddate => "2011-12-13", :endtime => "10:10", :source_zone => "trust",\
          :source_type => "组", :source_ip => "", :source_user => "", :source_usergrp => "usergrp1",
          :sub_grp => "否", :dest_zone => "untrust", :dest_ip => "", :service_app => "应用",
          :services => "", :protocol => "", :port => "", :apps => "网络协议/ECHO",
          :accept => "是", :refuse => "是",:record_hoped => ""})
    end

    assert_success do
      @log_query.application_control_log_query({:startdate => "2010-01-18", :starttime => "00:00",\
            :enddate => "2010-01-18", :endtime => "23:59", :source_zone => "所有区域",\
          :source_type => "所有", :source_ip => "", :source_user => "", :source_usergrp => "",
          :sub_grp => "是", :dest_zone => "所有区域", :dest_ip => "所有", :service_app => "全部",
          :services => "所有", :protocol => "ICMP", :port => "223", :apps => "所有应用",
          :accept => "否", :refuse => "是",:record_hoped => "HTTP应用/HTTP_POST#TCP#lan#/AF/#user1#wan#218.17.246.172#appctr#拒绝"})
    end
  end

  def test_website_access_log_query
 
  end

end