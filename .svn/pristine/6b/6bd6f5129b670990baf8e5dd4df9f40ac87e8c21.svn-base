# coding: utf-8
#
# This file is generated by att util tool.
# by 2012-12-27 19:37:04
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestAutoItSendPacket < Test::Unit::TestCase
  def setup
    #you can use $local_pc_network_access_auto_it_send_packet to quote hash as argument.
    @o = keyword_proxy_for_class_name( LocalPc::NetworkAccess::AutoItSendPacket ).new
#     @o = LocalPc::NetworkAccess::AutoItSendPacket.new
  end
  
  def test_tcpclient_1_send
    test_del_hash = []
#    test_del_hash << {:dip => "111.168.8.103"} # => 默认删除全部
#    test_del_hash << {:name => "保证带宽"} # => 删除一个
#    test_del_hash << {:name => "子接口@;@源IP组"} # => 删除两个
#    test_del_hash << {:name => "自定义应用_2@;@自定义应用_3@;@自定义应用_4"} # => 删除两个
    test_del_hash.each { |test_hash|
      assert_success do
        @o.tcpclient_send(test_hash)
      end
    }
  end
  
  def test_tcpclient_2_check_speed
    test_del_hash = []
#    test_del_hash << {:dip => "111.168.8.103"} # => 默认删除全部
    test_del_hash.each { |test_hash|
      assert_success do
        @o.tcpclient_check_speed(test_hash)
      end
    }
  end

  def test_tcpclient_3_close_window
    test_del_hash = []
#    test_del_hash << {:dip => "111.168.8.103"} # => 默认删除全部
#    test_del_hash << {:name => "保证带宽"} # => 删除一个
#    test_del_hash << {:name => "子接口@;@源IP组"} # => 删除两个
#    test_del_hash << {:name => "自定义应用_2@;@自定义应用_3@;@自定义应用_4"} # => 删除两个
    test_del_hash.each { |test_hash|
      assert_success do
        @o.tcpclient_close_window(test_hash)
      end
    }
  end

  def test_newClient_4_udp_send
    test_del_hash = []
    test_del_hash << {:dip => "111.168.8.103"} # => 默认删除全部
#    test_del_hash << {:name => "保证带宽"} # => 删除一个
#    test_del_hash << {:name => "子接口@;@源IP组"} # => 删除两个
#    test_del_hash << {:name => "自定义应用_2@;@自定义应用_3@;@自定义应用_4"} # => 删除两个
    test_del_hash.each { |test_hash|
      assert_success do
        @o.newClient_udp_send(test_hash)
      end
    }
  end
  
end