# coding: utf8
#
# This file is generated by att util tool.
# by 2011-12-07 20:11:37
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestService < Test::Unit::TestCase
  def setup
    @common = Common.new
    @service = DeviceConsole::ObjectDefinition::Service.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end

  def test_add_and_delete_service_group
    # 删除所有的服务组
    assert_success do
      @service.delete_service_group({:delete_type => "全部删除", :names => ""})
    end
    # 新增服务组,正常
    assert_success do
      @service.add_service_group({:name => "servicegrp1", :description => "描述", :services => "预定义服务/ping&预定义服务/ftp&预定义服务/smtp"})
    end
    # 删除服务组
    assert_success do
      @service.delete_service_group({:delete_type => "部分删除", :names => "servicegrp1"})
    end
    # 新增服务组,正常
    assert_success do
      @service.add_service_group({:name => "servicegrp2", :description => "描述", :services => ""})
    end
    # 新增服务组,包含不存在的服务,异常
    assert_fail do
      @service.add_service_group({:name => "servicegrp3", :description => "描述", :services => "预定义服务/不存在的服务&预定义服务/smtp"})
    end
    # 新增服务组,名称为空,异常
    assert_fail do
      @service.add_service_group({:name => "", :description => "描述", :services => "预定义服务/smtp"})
    end
    # 删除所有的服务组
    assert_success do
      @service.delete_service_group({:delete_type => "全部删除", :names => ""})
    end
  end

  def test_add_and_delete_custom_service
    # 删除所有的自定义服务
    assert_success do
      @service.delete_custom_service({:delete_type => "全部删除", :names => ""})
    end
    # 新增自定义服务,正常
    assert_success do
      @service.add_custom_service({:name => "customserv1", :description => "描述",
          :tcp => "81&82-90", :udp => "91&92-100", :icmp => "type:8,code:0&type:9,code:1", :other => "200"})
    end
    # 删除自定义服务
    assert_success do
      @service.delete_custom_service({:delete_type => "部分删除", :names => "customserv1"})
    end
    # 新增自定义服务,正常
    assert_success do
      @service.add_custom_service({:name => "customserv2", :description => "描述",
          :tcp => "81 & 82-90", :udp => "91& 92-100 ", :icmp => "type:8, code:0& type:9 ,code:1 ", :other => "200"})
    end
    # 新增自定义服务,异常,不填写任何协议号或范围
    assert_fail do
      @service.add_custom_service({:name => "customserv3", :description => "描述",
          :tcp => "", :udp => "", :icmp => "", :other => ""})
    end
    # 新增自定义服务,异常,同名
    assert_fail do
      @service.add_custom_service({:name => "customserv2", :description => "描述",
          :tcp => "", :udp => "", :icmp => "", :other => ""})
    end
    # 删除所有的自定义服务
    assert_success do
      @service.delete_custom_service({:delete_type => "全部删除", :names => ""})
    end
  end

end