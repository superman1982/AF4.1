# coding: utf8
# 
# This file is generated by att util tool.
# by 2011-12-08 14:42:25
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestApplicationControlStrategy < Test::Unit::TestCase
  def setup
    @application_control = DeviceConsole::ContentSecurity::ApplicationControlStrategy.new
    
    @common = Common.new
    @interface_zone = DeviceConsole::NetConfig::InterfaceZone.new
    @ip_group = DeviceConsole::ObjectDefinition::IpGroup.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end
  
  def test_add_and_delete_application_control_strategy
    # 删除应用控制策略
    assert_success do
      @application_control.delete_application_control_strategy({:delete_type => "全部删除", :names => ""})
    end
    # 删除所有的IP组
    assert_success do
      @ip_group.delete_ip_group({ :delete_type => "全部删除", :group_names => ""})
    end
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone211", :forward_type => "三层区域", :interfaces => "",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone212", :forward_type => "三层区域", :interfaces => "",
        :enable_webui => "否", :enable_ssh => "否", :enable_snmp => "否", :manage_address => "全部")
    end
    # 新增IP组,正常
    assert_success do
      @ip_group.add_ip_group({:group_name => "ipgrp211", :description => "描述", :ip_addresses => "2.2.2.2&1.1.1.1-1.1.1.100"})
    end
    # 新增IP组,正常
    assert_success do
      @ip_group.add_ip_group({:group_name => "ipgrp212", :description => "描述", :ip_addresses => "4.3.2.2"})
    end
    # 新增应用控制策略
    assert_success do
      @application_control.add_application_control_strategy({:name => "appctrl1", :enable => "是", :description => "描述",\
            :source_zone => "zone211&zone212", :source_group_type => "IP组", :source_ip => "ipgrp211&ipgrp212",\
            :source_user => "", :dest_zone => "zone211&zone212", :dest_ip => "全部", :app_type => "服务",\
            :services => "自定义服务/全部&预定义服务/ping&服务组/全部", :apps => "", :take_effect_time => "全天", :operation => "允许", :record_log => "否"})
    end
    # 检查应用控制策略的设置
    assert_success do
      @application_control.check_application_control_strategy({:name => "appctrl1", :source_zone => "zone212&zone211",\
            :source_user_ip => "ipgrp212&ipgrp211", :dest_zone => "zone211&zone212", :dest_ip => "全部",\
            :service_app => "自定义服务/全部&预定义服务/ping&服务组/全部", :take_effect_time => "全天",\
            :operation => "允许", :record_log => "否", :status => "启用"})
    end
    # 检查应用控制策略的设置
    assert_success do
      @application_control.check_application_control_strategy({:name => "appctrl1", :source_zone => "zone211&zone212",\
            :source_user_ip => "ipgrp211&ipgrp212", :dest_zone => "zone211&zone212", :dest_ip => "全部",\
            :service_app => "自定义服务/全部&预定义服务/ping&服务组/全部", :take_effect_time => "全天",\
            :operation => "允许", :record_log => "否", :status => "启用"})
    end
    # 检查应用控制策略数目
    assert_success do
      @application_control.check_application_control_strategy_count({:count => "2"})
    end
    # 新增应用控制策略
    assert_success do
      @application_control.add_application_control_strategy({:name => "appctrl2", :enable => "是", :description => "描述",\
            :source_zone => "zone211", :source_group_type => "用户组", :source_ip => "",\
            :source_user => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212", :app_type => "应用",\
            :services => "", :apps => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天", :operation => "拒绝", :record_log => "是"})
    end
    # 检查应用控制策略的设置
    assert_success do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略数目
    assert_success do
      @application_control.check_application_control_strategy_count({:count => "3"})
    end
    # 禁用应用控制策略
    assert_success do
      @application_control.enable_disable_application_control_strategy({:names => "appctrl1&appctrl2", :operation => "禁用"})
    end
    # 检查应用控制策略的设置
    assert_success do
      @application_control.check_application_control_strategy({:name => "appctrl1", :source_zone => "zone212&zone211",\
            :source_user_ip => "ipgrp212&ipgrp211", :dest_zone => "zone211&zone212", :dest_ip => "全部",\
            :service_app => "自定义服务/全部&预定义服务/ping&服务组/全部", :take_effect_time => "全天",\
            :operation => "允许", :record_log => "否", :status => "禁用"})
    end
    # 检查应用控制策略的设置
    assert_success do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "禁用"})
    end
    # 启用应用控制策略
    assert_success do
      @application_control.enable_disable_application_control_strategy({:names => "appctrl2", :operation => "启用"})
    end
    # 检查应用控制策略的设置
    assert_success do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,源区域不一致
    assert_hope("源区域错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone212",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,源IP用户不一致
    assert_hope("源IP用户错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/&test", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,目的区域不一致
    assert_hope("目的区域错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone211", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,目的IP组不一致
    assert_hope("目的IP组错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,服务应用不一致
    assert_hope("服务应用错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,生效时间错误
    assert_hope("生效时间错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "ipgrp1000",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,动作错误
    assert_hope("动作错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "允许", :record_log => "是", :status => "启用"})
    end
    # 检查应用控制策略的设置,记录日志错误
    assert_hope("记录日志错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "否", :status => "启用"})
    end
    # 检查应用控制策略的设置,状态错误
    assert_hope("状态错误") do
      @application_control.check_application_control_strategy({:name => "appctrl2", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "禁用"})
    end
    # 检查应用控制策略的设置,不存在的应用控制策略
    assert_hope("应用控制策略不存在") do
      @application_control.check_application_control_strategy({:name => "appctrl2000", :source_zone => "zone211",\
            :source_user_ip => "/默认组/", :dest_zone => "zone212", :dest_ip => "ipgrp211&ipgrp212",\
            :service_app => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天",\
            :operation => "拒绝", :record_log => "是", :status => "启用"})
    end
    # 禁用应用控制策略,不存在的应用控制策略
    assert_fail do
      @application_control.enable_disable_application_control_strategy({:names => "appctrl2000", :operation => "禁用"})
    end
    # 删除应用控制策略
    assert_success do
      @application_control.delete_application_control_strategy({:delete_type => "部分删除", :names => "appctrl1&appctrl2"})
    end
    # 新增应用控制策略
    assert_success do
      @application_control.add_application_control_strategy({:name => "appctrl3", :enable => "是", :description => "描述",\
            :source_zone => "zone211", :source_group_type => "IP组", :source_ip => "全部",\
            :source_user => "", :dest_zone => "zone212", :dest_ip => "全部", :app_type => "应用",\
            :services => "", :apps => "IM传文件/全部&FTP/ftp下载&其他应用/其他应用", :take_effect_time => "全天", :operation => "拒绝", :record_log => "是"})
    end
    # 删除应用控制策略
    assert_success do
      @application_control.delete_application_control_strategy({:delete_type => "全部删除", :names => ""})
    end
    # 检查应用控制策略数目
    assert_success do
      @application_control.check_application_control_strategy_count({:count => "1"})
    end
    # 删除所有的IP组
    assert_success do
      @ip_group.delete_ip_group({ :delete_type => "全部删除", :group_names => ""})
    end
    # 删除所有的区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "全部删除", :names => ""})
    end
    # 检查应用控制策略数目
    assert_hope("策略数目错误") do
      @application_control.check_application_control_strategy_count({:count => "5"})
    end
  end
  
end
