# coding: utf8
#
# This file is generated by att util tool.
# by 2011-12-09 09:30:47
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestNetworkOperation < Test::Unit::TestCase
  def setup
    @common = Common.new
    @network_operation = DeviceBack::NetworkOperation.new
    @interface_zone = DeviceConsole::NetConfig::InterfaceZone.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
    
  end

  def test_check_virtual_interface_by_pppope
    # 拨号虚拟设备不存在
    assert_fail do
      @network_operation.check_virtual_interface_by_pppope( { :devicename => $common["device_name"] } )
    end
    
  end

  def test_tcpdump_check_link_check_interval
    # 路由接口类型,静态IP连接类型,DNS解析检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth1", :enable => "是", :description => "", :type => "路由",
          :is_wan => "是", :enable_ping => "是", :link_type => "静态IP", :static_ip => $common["StaticIPOnLine"],
          :gateway => $common["GateWayOnLine"], :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "", :dns_server => "8.8.8.8",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "2", :vlan_scope => "1-999",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
    # 抓包检测链路检测间隔
    assert_success do
      @network_operation.tcpdump_check_link_check_interval({:devicename => $common["device_name"],
        :options => "-i eth1 udp port 53 -nn -c 10", :interval => "2"})
    end
    # 路由接口类型,DHCP连接类型,不启用检测链路故障
    assert_success do
      @interface_zone.edit_physical_interface( { :name => "eth1", :enable => "是", :description => "描述", :type => "路由",
          :is_wan => "否", :enable_ping => "否", :link_type => "DHCP", :static_ip => "",
          :gateway => "", :dhcp_add_default_route => "否", :adsl_account => "", :adsl_passwd => "",
          :adsl_shake_time => "20", :adsl_timeout => "80", :adsl_retry_times => '3', :adsl_auto => "是",
          :adsl_add_default_route => "否", :adsl_first_dns => "否", :up_bandwidth => "10MB/s", :down_bandwidth => "10MB/s",
          :enable_link_trouble_check => "是", :check_method => "DNS解析", :ping_ip => "202.96.137.23", :dns_server => "2.2.2.2",
          :dns_domain => "www.sangfor.com", :check_interval => "2", :access_id => "1", :native_id => "1", :vlan_scope => "1-1000",
          :work_mode => "自动协商", :mtu => 1500, :mac => "" } )
    end
  end

  def test_tcpdump_package
    # 启动tcpdump抓包进程,直接返回
    assert_success do
      @network_operation.tcpdump_package({:devicename => $common["device_name"],:block => "否",
        :options => "-i eth1 udp port 53", :tmpfile => "/root/tcpdump.txt"})
    end
  end
  
end