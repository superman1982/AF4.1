# coding: utf8
#
# This file is generated by att util tool.
# by 2012-08-22 18:39:50
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestWaf < Test::Unit::TestCase
  def setup
    @common = Common.new
    @waf_rule = keyword_proxy_for_class_name( DeviceConsole::ServerProtection::Waf ).new
    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
    
    make_hash_new
    make_hash_edit
    make_hash_del
    make_hash_enable_disable
    
  end
  
  def make_hash_new
    # 新增WAF策略,全部数据给予
    @hash_new_1 = {
      :name =>"test",      :enable => "是",      :description =>"woolenTest",
      :source_zone =>"lan",      :dest_zone =>"wan",      :dest_ipgs =>"全部",
      :web_app_port =>"80",      :ftp_port =>"21",      :mysql_port =>"3306",
      :telnet_port =>"23",      :ssh_port =>"22",      :web_app_protect =>"1&2&3&4&5&6&7&8&9&10",
      # => 4.0功能
      :is_csrf_protect =>"是", :csrf_protect_data =>"www.baidu.com:是:/target1:/refer1:是:/target2:/refer2:否",
      :is_initiative_recovery =>"是", :initiative_recovery_data =>"100:76:是:是", :initiative_recovery_excld_url=>"URL1;URL2;URL3",
      :is_restricted_url =>"是", :restricted_url_data =>"www.baidu.com:是:/admin;/admin2",
      :is_cookie_protect =>"是", :cookie_protect_select =>"全部", :cookie_protect_data=>"abc;def",
      :is_aet_protect =>"是",
      :is_urlparams_protect => "是",:urlparams_protect_data => "/test.asp:;:是:;:是:;:param@;@是@;@\\d+",
      
      :streng_url =>"",      :hide_ftp =>"是",      :hide_http =>"是",
      :is_hide_http_head =>"是",      :hide_http_head =>"Server&X-Powered-By",
      :is_replace_http_error =>"是",      :is_ftp_weakpasswd_protect =>"是",
      :ftp_weakpasswd_protect_set =>"numchar&same&empty",      :ftp_weakpasswd_protect_list =>"",
      :is_passwdburst_protect =>"是",      :is_ftp_passwdburst_protect =>"是",
      :ftp_passwdburst_protect_count =>"10",      :ftp_passwdburst_protect_unit =>"分",
      :is_web_passwdburst_protect =>"否",      :web_passwdburst_protect_path =>"",
      :web_passwdburst_protect_count =>"10",      :web_passwdburst_protect_unit =>"分",
      :is_file_upload_filter =>"是",      :file_upload_filter_list =>"jsp&asp&exe",
      :is_url_protect =>"是",      :url_protect_list =>"",      :is_proto_unusual =>"是",
      :is_method_filter =>"是",      :method_filter_list =>"get&post",      :is_url_overflow =>"是",
      :url_overflow_maxlenth =>"1024",      :is_post_overflow =>"是",      :post_overflow_maxlenth =>"2048",
      :is_http_head_check =>"是",      :http_head_check_list =>"abcd:123",      :is_susceptive =>"否",
      :susceptive_way =>"IP",      :susceptive_list =>"",      :is_file_download_filter =>"否",
      :file_download_filter_list =>"dat&conf&mdb",      :operation =>"拒绝",
      :islockip =>"否",      :record_log =>"是",      :issmsalarm =>"否",      :hope =>"成功"
    }
    # 新增WAF策略,全部数据给予,所有带多个数据的项都加上多个数据
    @hash_new_2 = {
      :name =>"test2",      :enable => "是",      :description =>"woolenTest",
      :source_zone =>"lan&wan",      :dest_zone =>"wan&lan",      :dest_ipgs =>"全部",
      :web_app_port =>"80,88,82",      :ftp_port =>"21,221,231",      :mysql_port =>"3306,3055",
      :telnet_port =>"23,28",      :ssh_port =>"22,22345",      :web_app_protect =>"1",
      # => 4.0功能
      :is_csrf_protect =>"是", :csrf_protect_data =>"www.baidu.com:是:/target1:/refer1:是:/target2:/refer2:否&www.baidu2.com:是:/target1:/refer1:是:/target2:/refer2:否",
      :is_initiative_recovery =>"是", :initiative_recovery_data =>"100:76:是:是", :initiative_recovery_excld_url=>"URL1;URL2;URL3",
      :is_restricted_url =>"是", :restricted_url_data =>"www.baidu.com:是:/admin;/admin2&www.baidu2.com:是:/admin;/admin2",
      :is_cookie_protect =>"是", :cookie_protect_select =>"白名单", :cookie_protect_data=>"abc;def",
      :is_aet_protect =>"是",
      :is_urlparams_protect => "是",:urlparams_protect_data => "/test.asp:;:是:;:是:;:param@;@是@;@\d+&,&/test2.asp:;:是:;:是:;:param@;@是@;@\d+",
      
      :streng_url =>"/eef/ad:hah&/dde/dc:bbc",      :hide_ftp =>"是",      :hide_http =>"是",
      :is_hide_http_head =>"是",      :hide_http_head =>"Server&X-Powered-By&abc&def",
      :is_replace_http_error =>"否",      :is_ftp_weakpasswd_protect =>"否",
      :ftp_weakpasswd_protect_set =>"numchar&same&empty&less&char&num",      :ftp_weakpasswd_protect_list =>"a&b&c&123",
      :is_passwdburst_protect =>"是",      :is_ftp_passwdburst_protect =>"是",
      :ftp_passwdburst_protect_count =>"10",      :ftp_passwdburst_protect_unit =>"秒",
      :is_web_passwdburst_protect =>"是",      :web_passwdburst_protect_path =>"/root/admin&/root/user",
      :web_passwdburst_protect_count =>"15",      :web_passwdburst_protect_unit =>"秒",
      :is_file_upload_filter =>"是",      :file_upload_filter_list =>"jsp&asp&exe&php",
      :is_url_protect =>"是",      :url_protect_list =>"/url/abc&/admin/txt",      :is_proto_unusual =>"是",
      :is_method_filter =>"是",      :method_filter_list =>"get&post&head",      :is_url_overflow =>"是",
      :url_overflow_maxlenth =>"1022",      :is_post_overflow =>"是",      :post_overflow_maxlenth =>"3048",
      :is_http_head_check =>"是",      :http_head_check_list =>"abcd:133&efg:22&waf:102",      :is_susceptive =>"是",
      :susceptive_way =>"连接",      :susceptive_list =>"组合策略名:12:身份证:MD5&组合2:1:MD5:手机号码:邮箱:银行卡号",      :is_file_download_filter =>"是",
      :file_download_filter_list =>"dat&conf&mdb",      :operation =>"允许",
      :islockip =>"是",      :record_log =>"是",      :issmsalarm =>"否",      :hope =>"成功"
    }
    # 新增WAF策略,只给必要数据,看默认数据生效
    @hash_new_3 = {
      :name =>"test3",      :enable => "是",      :description =>"woolenTest",
      :source_zone =>"lan&wan",      :dest_zone =>"wan&lan", :dest_ipgs =>"全部",
    }
    # 新增WAF策略,错误数据给予,意图失败
    @hash_new_4 = {
      :name =>"test4",      :enable => "是",      :description =>"woolenTest",
      :source_zone =>"lan&wan",      :dest_zone =>"wan&lan", :dest_ipgs =>"全部",
      :web_app_port =>"80,884,825,555", :web_passwdburst_protect_path =>"/root/admin&/root/user?abc=1//&a<script>alert(\"test\")</script>"
    }
    # 新增WAF策略,引用不存在区域
    @hash_new_5 = {
      :name =>"test4",      :enable => "是",      :description =>"woolenTest",
      :source_zone =>"lan&wan&TTTTTTT",      :dest_zone =>"wan&lan", :dest_ipgs =>"全部",
      :web_app_port =>"80,884,825,555", :web_passwdburst_protect_path =>""
    }
  end
  
  def make_hash_edit
    @hash_edit_1 = {
      :name =>"test",      :enable => "否",      :description =>"woolenTest",
      :source_zone =>"lan",      :dest_zone =>"wan",      :dest_ipgs =>"全部",
      :web_app_port =>"80",      :ftp_port =>"21",      :mysql_port =>"3306",
      :telnet_port =>"23",      :ssh_port =>"22",      :web_app_protect =>"1&2&3&4&5&6&7&8&9&10",
      # => AF4.0
      :is_csrf_protect =>"是", :csrf_protect_data =>"www.baidu.com:是:/target1:/refer1:是:/target2:/refer2:否&www.baidu2.com:是:/target1:/refer1:是:/target2:/refer2:否",
      :is_initiative_recovery =>"是", :initiative_recovery_data =>"100:76:是:是", :initiative_recovery_excld_url=>"URL1;URL2;URL3",
      :is_restricted_url =>"是", :restricted_url_data =>"www.baidu.com:是:/admin;/admin2&www.baidu2.com:是:/admin;/admin2",
      :is_cookie_protect =>"是", :cookie_protect_select =>"白名单", :cookie_protect_data=>"abc;def",
      :is_aet_protect =>"是",
      :is_urlparams_protect => "是",:urlparams_protect_data => "/test.asp:;:是:;:是:;:param@;@是@;@\d+&,&/test2.asp:;:是:;:是:;:param@;@是@;@\d+",

      :streng_url =>"",      :hide_ftp =>"是",      :hide_http =>"是",
      :is_hide_http_head =>"是",      :hide_http_head =>"Server&X-Powered-By",
      :is_replace_http_error =>"是",      :is_ftp_weakpasswd_protect =>"是",
      :ftp_weakpasswd_protect_set =>"numchar&same&empty",      :ftp_weakpasswd_protect_list =>"",
      :is_passwdburst_protect =>"是",      :is_ftp_passwdburst_protect =>"是",
      :ftp_passwdburst_protect_count =>"10",      :ftp_passwdburst_protect_unit =>"分",
      :is_web_passwdburst_protect =>"否",      :web_passwdburst_protect_path =>"",
      :web_passwdburst_protect_count =>"10",      :web_passwdburst_protect_unit =>"分",
      :is_file_upload_filter =>"是",      :file_upload_filter_list =>"jsp&asp&exe",
      :is_url_protect =>"是",      :url_protect_list =>"",      :is_proto_unusual =>"是",
      :is_method_filter =>"是",      :method_filter_list =>"get&post",      :is_url_overflow =>"是",
      :url_overflow_maxlenth =>"1024",      :is_post_overflow =>"是",      :post_overflow_maxlenth =>"2048",
      :is_http_head_check =>"是",      :http_head_check_list =>"abcd:133",      :is_susceptive =>"是",
      :susceptive_way =>"IP",      :susceptive_list =>"组合策略名:12:身份证:MD5&组合2:1:MD5:手机号码:邮箱:银行卡号",      :is_file_download_filter =>"是",
      :file_download_filter_list =>"dat&conf&mdb",      :operation =>"拒绝",
      :islockip =>"否",      :record_log =>"是",      :issmsalarm =>"否",      :hope =>"成功"
    }
    @hash_edit_2 = {
      :name =>"test2",      :enable => "是",      :description =>"woolenTest",
      :source_zone =>"lan",      :dest_zone =>"wan",      :dest_ipgs =>"全部",
      :web_app_port =>"80,88,82",      :ftp_port =>"21,221,231",      :mysql_port =>"3306,3055",
      :telnet_port =>"23,28",      :ssh_port =>"22,22345",      :web_app_protect =>"1",
      # => AF4.0
      :is_csrf_protect =>"是", :csrf_protect_data =>"www.baidu.com:是:/target1:/refer1:是:/target2:/refer2:否&www.baidu2.com:是:/target1:/refer1:是:/target2:/refer2:否",
      :is_initiative_recovery =>"是", :initiative_recovery_data =>"100:76:是:是", :initiative_recovery_excld_url=>"URL1;URL2;URL3",
      :is_restricted_url =>"是", :restricted_url_data =>"www.baidu.com:是:/admin;/admin2&www.baidu2.com:是:/admin;/admin2",
      :is_cookie_protect =>"是", :cookie_protect_select =>"白名单", :cookie_protect_data=>"abc;def",
      :is_aet_protect =>"是",
      :is_urlparams_protect => "是",:urlparams_protect_data => "/test.asp:;:是:;:是:;:param@;@是@;@\d+&,&/test2.asp:;:是:;:是:;:param@;@是@;@\d+",

      :streng_url =>"/eef/ad:hah&/dde/dc:bbc",      :hide_ftp =>"是",      :hide_http =>"是",
      :is_hide_http_head =>"是",      :hide_http_head =>"Server&X-Powered-By&abc&def",
      :is_replace_http_error =>"否",      :is_ftp_weakpasswd_protect =>"否",
      :ftp_weakpasswd_protect_set =>"numchar&same&empty&less&char&num",      :ftp_weakpasswd_protect_list =>"a&b&c&123",
      :is_passwdburst_protect =>"是",      :is_ftp_passwdburst_protect =>"是",
      :ftp_passwdburst_protect_count =>"10",      :ftp_passwdburst_protect_unit =>"秒",
      :is_web_passwdburst_protect =>"是",      :web_passwdburst_protect_path =>"/root/admin&/root/user",
      :web_passwdburst_protect_count =>"15",      :web_passwdburst_protect_unit =>"秒",
      :is_file_upload_filter =>"是",      :file_upload_filter_list =>"jsp&asp&exe&php",
      :is_url_protect =>"是",      :url_protect_list =>"/url/abc&/admin/txt",      :is_proto_unusual =>"是",
      :is_method_filter =>"是",      :method_filter_list =>"get&post&head",      :is_url_overflow =>"是",
      :url_overflow_maxlenth =>"1022",      :is_post_overflow =>"是",      :post_overflow_maxlenth =>"3048",
      :is_http_head_check =>"是",      :http_head_check_list =>"abcd:133&efg:22&waf:102",      :is_susceptive =>"是",
      :susceptive_way =>"连接",      :susceptive_list =>"组合策略名:12:身份证:MD5&组合2:1:MD5:手机号码:邮箱:银行卡号",      :is_file_download_filter =>"是",
      :file_download_filter_list =>"dat&conf&mdb",      :operation =>"允许",
      :islockip =>"是",      :record_log =>"是",      :issmsalarm =>"否",      :hope =>"成功"
    }
  end
  
  def make_hash_del
    @hash_del_1 = {
      :names =>"test",      :delete_type => "部分删除",    :hope =>"成功"
    }
    @hash_del_all = {
      :names =>"test2",      :delete_type => "全部删除",    :hope =>"成功"
    }
  end
  
  def make_hash_enable_disable
    @hash_enable_disable_0 = {
      :enable_count => "全部操作", :enable_type => "禁用", :names => "test&test2", :hope => "成功"
    }
    @hash_enable_disable_1 = {
      :enable_count => "全部操作", :enable_type => "启用", :names => "test&test2", :hope => "成功"
    }
    @hash_enable_disable_2 = {
      :enable_count => "部分操作", :enable_type => "启用", :names => "test", :hope => "成功"
    }
    @hash_enable_disable_3 = {
      :enable_count => "部分操作", :enable_type => "禁用", :names => "test", :hope => "成功"
    }
  end
  def test_new_waf_policy
    puts("这里是 test_new_waf_policy ... ===================@@Woolen Test@@====================")
    
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_1)
    end
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_2)
    end
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_3)
    end
    assert_fail do
      @waf_rule.new_waf_policy(@hash_new_4)
    end
    assert_fail do
      @waf_rule.new_waf_policy(@hash_new_5)
    end
  end
  
#  def test_del_waf_policy
#    puts("这里是 test_del_waf_policy ... ===================@@Woolen Test@@====================")
#    
#    assert_success do
#      @waf_rule.new_waf_policy(@hash_new_1)
#    end
#    assert_success do
#      @waf_rule.new_waf_policy(@hash_new_2)
#    end
#    assert_success do
#      @waf_rule.del_waf_policy(@hash_del_1)
#    end
#    assert_success do
#      @waf_rule.del_waf_policy(@hash_del_all)
#    end
#  end
  
  def test_edit_waf_policy
    puts("这里是 test_edit_waf_policy ... ===================@@Woolen Test@@====================")
    
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_1)
    end
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_2)
    end
    assert_success do
      @waf_rule.edit_waf_policy(@hash_edit_1)
    end
    assert_success do
      @waf_rule.edit_waf_policy(@hash_edit_2)
    end
  end
  
  def test_enable_disable_waf
    puts("这里是 test_enable_disable_waf ... ===================@@Woolen Test@@====================")
    
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_1)
    end
    assert_success do
      @waf_rule.new_waf_policy(@hash_new_2)
    end
    assert_success do
      @waf_rule.enable_disable_waf(@hash_enable_disable_0)
    end
    assert_success do
      @waf_rule.enable_disable_waf(@hash_enable_disable_1)
    end
    assert_success do
      @waf_rule.enable_disable_waf(@hash_enable_disable_2)
    end
    assert_success do
      @waf_rule.enable_disable_waf(@hash_enable_disable_3)
    end
  end
  
#  def teardown
#    puts("这里是 teardown ... ===================@@Woolen Test@@====================")
#    assert_success do
#      @waf_rule.del_waf_policy(@hash_del_all)
#    end
#  end
end