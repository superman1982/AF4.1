# coding: utf-8
#
# This file is generated by att util tool.
# by 2012-12-28 17:02:01
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

class TestFluxView < Test::Unit::TestCase
  def setup
    #you can use $device_console_run_state_flux_view to quote hash as argument.
    @o = keyword_proxy_for_class_name( DeviceConsole::RunState::FluxView ).new
    @common = Common.new
    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end
  
  def test_check_main_speed
    test_del_hash = []
    test_del_hash << {:check_direction =>"上传", :check_type =>"速率",:check_data =>"100@;@160000"}
    test_del_hash << {:check_direction =>"下载", :check_type =>"百分比",:check_data =>"0@;@5"}
    test_del_hash.each { |test_hash|
      assert_success do
        @o.check_main_speed(test_hash)
      end
    }
  end
  
  def test_check_passage_speed
    test_del_hash = []
    test_del_hash << {:name=>"Telnet",:check_direction =>"上传", :check_type =>"速率",:check_data =>"100@;@160000"}
    test_del_hash << {:name=>"Telnet",:check_direction =>"下载", :check_type =>"百分比",:check_data =>"0@;@5"}
    test_del_hash.each { |test_hash|
      assert_success do
        @o.check_passage_speed(test_hash)
      end
    }
  end

  def test_check_exclude_speed
    test_del_hash = []
    test_del_hash << {:check_direction =>"上传", :check_data =>"0@;@1600"}
    test_del_hash << {:check_direction =>"下载", :check_data =>"0@;@5"}
    test_del_hash.each { |test_hash|
      assert_success do
        @o.check_exclude_speed(test_hash)
      end
    }
  end
  
end