# coding: utf8
#
# This file is generated by att util tool.
# by 2012-05-24 19:44:09
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestIpsRule < Test::Unit::TestCase
  def setup
    @common = Common.new
    @interface_zone = DeviceConsole::NetConfig::InterfaceZone.new
    @ips_rule = keyword_proxy_for_class_name( DeviceConsole::Ips::IpsRule ).new
    @ip_group = DeviceConsole::ObjectDefinition::IpGroup.new

    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
    
  end
  
  def test_add_edit_and_delete_ips_rule
    # 新增区域
    assert_success do
      @interface_zone.add_zone(:name => "zone226", :forward_type => "三层区域", :interfaces => "",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    assert_success do
      @interface_zone.add_zone(:name => "zone227", :forward_type => "三层区域", :interfaces => "",
        :enable_webui => "是", :enable_ssh => "是", :enable_snmp => "是", :manage_address => "全部")
    end
    # 新增IP组
    assert_success do
      @ip_group.add_ip_group({:group_name => "IpGrp3", :description => "描述", :ip_addresses => "1.1.1.1-1.1.1.100"})
    end
    assert_success do
      @ip_group.add_ip_group({:group_name => "IpGrp4", :description => "描述", :ip_addresses => "2.2.2.2"})
    end

    # 新增IPS策略
    assert_success do
      @ips_rule.add_ips_rule({:name => "IPS1", :enable => "是", :description => "description",
          :source_zone => "zone226&zone227", :dest_zone => "zone226&zone227", :dest_ipgs => "IpGrp3&IpGrp4",
          :enable_server => "是", :server_holes => "worm&network_device&database&backdoor&trojan&spyware&web&media&dns&ftp&mail&tftp&system&telnet&shellcode",
          :enable_client => "是", :client_holes => "worm&file&backdoor&trojan&spyware&application&web_browse&system&shellcode&web_activex",
          :operation => "拒绝", :record_log => "是" })
    end
    # 新增IPS策略
    assert_success do
      @ips_rule.add_ips_rule({:name => "IPS2", :enable => "是", :description => "",
          :source_zone => "zone226", :dest_zone => "zone227", :dest_ipgs => "IpGrp4",
          :enable_server => "是", :server_holes => "worm",
          :enable_client => "是", :client_holes => "application",
          :operation => "允许", :record_log => "否" })
    end
    # 新增IPS策略
    assert_success do
      @ips_rule.add_ips_rule({:name => "IPS3", :enable => "是", :description => "",
          :source_zone => "zone226", :dest_zone => "zone227", :dest_ipgs => "IpGrp4",
          :enable_server => "是", :server_holes => "worm",
          :enable_client => "否", :client_holes => "application",
          :operation => "拒绝", :record_log => "否" })
    end
    # 新增IPS策略
    assert_success do
      @ips_rule.add_ips_rule({:name => "IPS4", :enable => "否", :description => "",
          :source_zone => "zone226", :dest_zone => "zone227", :dest_ipgs => "IpGrp4",
          :enable_server => "否", :server_holes => "worm",
          :enable_client => "是", :client_holes => "application",
          :operation => "拒绝", :record_log => "是" })
    end
    # 新增IPS策略,引用不存在的区域
    assert_fail do
      @ips_rule.add_ips_rule({:name => "IPS5", :enable => "否", :description => "",
          :source_zone => "gggggggggggggg", :dest_zone => "zone227", :dest_ipgs => "IpGrp4",
          :enable_server => "否", :server_holes => "worm",
          :enable_client => "是", :client_holes => "application",
          :operation => "拒绝", :record_log => "是" })
    end

    # 新增IPS策略,不存在的漏洞类型
    assert_hope("参数错误") do
      @ips_rule.add_ips_rule({:name => "IPS7", :enable => "否", :description => "",
          :source_zone => "zone227", :dest_zone => "zone227", :dest_ipgs => "hhhhhhhhhhhhhhh",
          :enable_server => "否", :server_holes => "wwww",
          :enable_client => "是", :client_holes => "application",
          :operation => "拒绝", :record_log => "是" })
    end
    
    # 编辑IPS策略
    assert_success do
      @ips_rule.edit_ips({:name => "IPS4", :enable => "是", :description => "啊啊啊啊啊啊啊啊啊啊啊啊啊",
          :source_zone => "zone227", :dest_zone => "zone226", :dest_ipgs => "IpGrp3&IpGrp4",
          :enable_server => "是", :server_holes => "worm",
          :enable_client => "否", :client_holes => "application",
          :operation => "允许", :record_log => "否" })
    end
    # 编辑IPS策略
    assert_success do
      @ips_rule.edit_ips({:name => "IPS4", :enable => "是", :description => "",
          :source_zone => "zone226&zone227", :dest_zone => "zone226&zone227", :dest_ipgs => "IpGrp4",
          :enable_server => "是", :server_holes => "worm&network_device&database&backdoor&trojan&spyware&web&media&dns&ftp&mail&tftp&system&telnet&shellcode",
          :enable_client => "是", :client_holes => "worm&file&backdoor&trojan&spyware&application&web_browse&system&shellcode&web_activex",
          :operation => "拒绝", :record_log => "是" })
    end
    # 编辑不存在的IPS策略
    assert_fail do
      @ips_rule.edit_ips({:name => "IPS4444444444444444", :enable => "是", :description => "",
          :source_zone => "zone226&zone227", :dest_zone => "zone226&zone227", :dest_ipgs => "IpGrp4",
          :enable_server => "是", :server_holes => "worm&network_device&database&backdoor&trojan&spyware&web&media&dns&ftp&mail&tftp&system&telnet&shellcode",
          :enable_client => "是", :client_holes => "worm&file&backdoor&trojan&spyware&application&web_browse&system&shellcode&web_activex",
          :operation => "拒绝", :record_log => "是" })
    end
    
    # 删除IPS策略
    assert_success do
      @ips_rule.delete_ips({:delete_type => "部分删除", :names => "IPS1&IPS2"})
    end
    # 删除IPS策略
    assert_success do
      @ips_rule.delete_ips({:delete_type => "全部删除", :names => ""})
    end
    # 删除区域
    assert_success do
      @interface_zone.delete_zone( {:delete_type => "部分删除", :names => "zone226&zone227"})
    end
    # 删除所有的IP组
    assert_success do
      @ip_group.delete_ip_group({ :delete_type => "部分删除", :group_names => "IpGrp3&IpGrp4"})
    end
  end
  
end