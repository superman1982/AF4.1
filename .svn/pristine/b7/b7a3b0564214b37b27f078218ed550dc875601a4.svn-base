# coding: utf8
# 
# This file is generated by att util tool.
# by 2011-12-07 17:00:22
#
$LOAD_PATH.unshift File.join(File.dirname(__FILE__),'../../../../') unless $LOADED
require 'keywords/unittests/setup'

$stdouttype = "GBK"

class TestRoute < Test::Unit::TestCase
  
  def setup
    @common = Common.new
    @route = DeviceConsole::NetConfig::Route.new
    assert_success do
      @common.set_current_device( $common["login_hash"] ) # 设置正确的当前设备的IP,用户名,密码
    end
  end
  
  def test_add_single_static_route
    # 删除所有的静态路由
    assert_hope("成功") do
      @route.delete_static_route({:delete_type => "全部删除", :routes => ""})
    end
    # 新增静态路由
    assert_hope("成功") do
      @route.add_single_static_route({:dest_address => "2.2.2.0",:netmask =>"255.255.255.0",
          :next_nop => "1.1.1.1",:interface =>"自动选择", :metric_value =>6})
    end
    # 删除静态路由
    assert_hope("成功") do # '目的地址/网络掩码/下一跳IP/度量值'
      @route.delete_static_route({:delete_type => "部分删除", :routes => "2.2.2.0/255.255.255.0/1.1.1.1/6"})
    end
    # 新增静态路由
    assert_hope("成功") do
      @route.add_single_static_route({:dest_address => "2.2.3.0",:netmask =>"255.255.255.0",
          :next_nop => "1.1.1.1",:interface =>"自动选择", :metric_value =>6})
    end
    # 新增静态路由
    assert_hope("成功") do
      @route.add_single_static_route({:dest_address => "2.2.2.0",:netmask =>"255.255.255.0",
          :next_nop => "1.1.1.1",:interface =>"自动选择", :metric_value =>6})
    end
    # 删除静态路由
    assert_hope("成功") do # '目的地址/网络掩码/下一跳IP/度量值'
      @route.delete_static_route({:delete_type => "部分删除", :routes => "2.2.2.0/255.255.255.0/1.1.1.1/6&2.2.3.0/255.255.255.0/1.1.1.1/6"})
    end
    # 新增静态路由
    assert_hope("失败") do
      @route.add_single_static_route({:dest_address => "2.2.4.1",:netmask =>"255.255.255.0",
          :next_nop => "1.1.1.1",:interface =>"eth5", :metric_value =>6})
    end
    # 删除格式错误的静态路由
    assert_hope("静态路由格式错误") do # '目的地址/网络掩码/下一跳IP/度量值'
      @route.delete_static_route({:delete_type => "部分删除", :routes => "2.2.2.0/255.255.255.0/6"})
    end
    # 删除格式错误的静态路由
    assert_hope("静态路由格式错误") do # '目的地址/网络掩码/下一跳IP/度量值'
      @route.delete_static_route({:delete_type => "部分删除", :routes => "2.2.2.0/255.255.255.0/1.1.1.1"})
    end
    # 删不存在的静态路由
    assert_hope("静态路由不存在") do # '目的地址/网络掩码/下一跳IP/度量值'
      @route.delete_static_route({:delete_type => "部分删除", :routes => "200.200.200.0/255.255.252.0/2.2.2.2/2"})
    end
  end
  
end